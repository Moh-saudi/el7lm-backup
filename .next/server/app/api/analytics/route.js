"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analytics/route";
exports.ids = ["app/api/analytics/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

module.exports = require("http2");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.ts&appDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.ts&appDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_el7lm25_main_1_el7lm25_main_src_app_api_analytics_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/analytics/route.ts */ \"(rsc)/./src/app/api/analytics/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analytics/route\",\n        pathname: \"/api/analytics\",\n        filename: \"route\",\n        bundlePath: \"app/api/analytics/route\"\n    },\n    resolvedPagePath: \"D:\\\\el7lm25-main (1)\\\\el7lm25-main\\\\src\\\\app\\\\api\\\\analytics\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_el7lm25_main_1_el7lm25_main_src_app_api_analytics_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/analytics/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbmFseXRpY3MlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFuYWx5dGljcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFuYWx5dGljcyUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDZWw3bG0yNS1tYWluJTIwKDEpJTVDZWw3bG0yNS1tYWluJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1EJTNBJTVDZWw3bG0yNS1tYWluJTIwKDEpJTVDZWw3bG0yNS1tYWluJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDc0I7QUFDbkc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbDdsbS8/YjE0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJEOlxcXFxlbDdsbTI1LW1haW4gKDEpXFxcXGVsN2xtMjUtbWFpblxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxhbmFseXRpY3NcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwic3RhbmRhbG9uZVwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hbmFseXRpY3Mvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hbmFseXRpY3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2FuYWx5dGljcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkQ6XFxcXGVsN2xtMjUtbWFpbiAoMSlcXFxcZWw3bG0yNS1tYWluXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGFuYWx5dGljc1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYW5hbHl0aWNzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.ts&appDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/analytics/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/analytics/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/firebase/config */ \"(rsc)/./src/lib/firebase/config.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"(rsc)/./node_modules/firebase/firestore/dist/index.mjs\");\n\n\n\n// Collections that represent users in the platform\nconst USER_COLLECTIONS = [\n    \"players\",\n    \"academies\",\n    \"clubs\",\n    \"agents\",\n    \"trainers\",\n    \"marketers\",\n    \"parents\"\n];\nfunction toDate(value) {\n    if (!value) return null;\n    if (value instanceof Date) return value;\n    if (value instanceof firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.Timestamp) return value.toDate();\n    const d = new Date(value);\n    return isNaN(d.getTime()) ? null : d;\n}\nfunction startOfDay(d) {\n    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0, 0);\n}\nfunction endOfDay(d) {\n    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59, 59, 999);\n}\n// Compute a naive profile completeness score (0-100) based on common fields\nfunction computeProfileCompleteness(u) {\n    const fields = [\n        \"name\",\n        \"email\",\n        \"phone\",\n        \"avatarUrl\",\n        \"city\",\n        \"country\",\n        \"bio\",\n        \"birthDate\",\n        \"gender\"\n    ];\n    const present = fields.reduce((acc, key)=>acc + (u?.[key] ? 1 : 0), 0);\n    return Math.round(present / fields.length * 100);\n}\nasync function POST(req) {\n    try {\n        const body = await req.json().catch(()=>({}));\n        const { event = \"visit\", route = \"/\", sessionId, userId } = body || {};\n        // Basic validation\n        if (!event) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing event\"\n            }, {\n                status: 400\n            });\n        }\n        // Basic IP/Geo extraction from headers (free, no external API)\n        const hdrs = req.headers;\n        const xff = hdrs?.get?.(\"x-forwarded-for\") || \"\";\n        const ipFromXff = xff.split(\",\")[0]?.trim();\n        const ip = ipFromXff || hdrs?.get?.(\"x-real-ip\") || hdrs?.get?.(\"cf-connecting-ip\") || null;\n        const country = hdrs?.get?.(\"x-vercel-ip-country\") || hdrs?.get?.(\"cf-ipcountry\") || null;\n        const region = hdrs?.get?.(\"x-vercel-ip-country-region\") || null;\n        const city = hdrs?.get?.(\"x-vercel-ip-city\") || null;\n        const acceptLanguage = hdrs?.get?.(\"accept-language\") || null;\n        // Persist a lightweight visit record\n        const visitsCol = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, \"analytics_visits\");\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(visitsCol), {\n            event,\n            route,\n            sessionId: sessionId || null,\n            userId: userId || null,\n            userAgent: hdrs?.get?.(\"user-agent\") || null,\n            ip: ip || null,\n            geo: {\n                country: country || null,\n                region: region || null,\n                city: city || null,\n                acceptLanguage: acceptLanguage || null\n            },\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.serverTimestamp)()\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true\n        });\n    } catch (e) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: e?.message || \"Failed\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET() {\n    try {\n        const now = new Date();\n        const days = 30;\n        const since = new Date(now.getTime() - days * 24 * 60 * 60 * 1000);\n        // Aggregate users counts per collection\n        const userCounts = {};\n        let totalUsers = 0;\n        for (const colName of USER_COLLECTIONS){\n            try {\n                const snap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getCountFromServer)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, colName));\n                const count = snap.data().count || 0;\n                userCounts[colName] = count;\n                totalUsers += count;\n            } catch  {\n                userCounts[colName] = 0;\n            }\n        }\n        // Pull recent users for daily registrations and completeness sampling\n        const recentUsers = [];\n        for (const colName of USER_COLLECTIONS){\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, colName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.limit)(1000));\n            const snap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDocs)(q);\n            snap.forEach((docSnap)=>{\n                const data = docSnap.data();\n                const createdAt = toDate(data?.createdAt);\n                if (createdAt) {\n                    recentUsers.push({\n                        id: docSnap.id,\n                        collection: colName,\n                        createdAt,\n                        ...data\n                    });\n                }\n            });\n        }\n        // Daily registrations last 30 days\n        const dailyMap = new Map();\n        const fmt = (d)=>`${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, \"0\")}-${String(d.getDate()).padStart(2, \"0\")}`;\n        recentUsers.forEach((u)=>{\n            if (u.createdAt && u.createdAt >= startOfDay(since)) {\n                const key = fmt(u.createdAt);\n                dailyMap.set(key, (dailyMap.get(key) || 0) + 1);\n            }\n        });\n        const dailyRegistrations = Array.from(dailyMap.entries()).map(([date, count])=>({\n                date,\n                count\n            })).sort((a, b)=>a.date.localeCompare(b.date));\n        // Profile completeness distribution (sample from recentUsers)\n        let completenessSum = 0;\n        const completenessBuckets = {\n            \"0-25\": 0,\n            \"26-50\": 0,\n            \"51-75\": 0,\n            \"76-100\": 0\n        };\n        let completedOver80 = 0;\n        recentUsers.forEach((u)=>{\n            const score = computeProfileCompleteness(u);\n            completenessSum += score;\n            if (score <= 25) completenessBuckets[\"0-25\"]++;\n            else if (score <= 50) completenessBuckets[\"26-50\"]++;\n            else if (score <= 75) completenessBuckets[\"51-75\"]++;\n            else completenessBuckets[\"76-100\"]++;\n            if (score >= 80) completedOver80++;\n        });\n        const avgCompleteness = recentUsers.length > 0 ? Math.round(completenessSum / recentUsers.length) : 0;\n        // Visitors analytics from analytics_visits collection (last 30 days)\n        const visitsQ = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, \"analytics_visits\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.where)(\"createdAt\", \">=\", since), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.limit)(5000));\n        const visitsSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDocs)(visitsQ);\n        const visits = [];\n        visitsSnap.forEach((d)=>{\n            const v = d.data();\n            visits.push({\n                sessionId: v?.sessionId || null,\n                route: v?.route || null,\n                createdAt: toDate(v?.createdAt),\n                ip: v?.ip || null,\n                userAgent: v?.userAgent || null,\n                geo: {\n                    country: v?.geo?.country || null,\n                    region: v?.geo?.region || null,\n                    city: v?.geo?.city || null\n                }\n            });\n        });\n        const totalVisits = visits.length;\n        const uniqueSessions = new Set(visits.map((v)=>v.sessionId).filter(Boolean)).size;\n        // Visitors per day\n        const visitorsDailyMap = new Map();\n        visits.forEach((v)=>{\n            if (!v.createdAt) return;\n            const key = fmt(v.createdAt);\n            visitorsDailyMap.set(key, (visitorsDailyMap.get(key) || 0) + 1);\n        });\n        const dailyVisitors = Array.from(visitorsDailyMap.entries()).map(([date, count])=>({\n                date,\n                count\n            })).sort((a, b)=>a.date.localeCompare(b.date));\n        // Top routes\n        const routeMap = new Map();\n        visits.forEach((v)=>{\n            const r = v.route || \"unknown\";\n            routeMap.set(r, (routeMap.get(r) || 0) + 1);\n        });\n        const topRoutes = Array.from(routeMap.entries()).map(([route, count])=>({\n                route,\n                count\n            })).sort((a, b)=>b.count - a.count).slice(0, 10);\n        // By country\n        const countryMap = new Map();\n        visits.forEach((v)=>{\n            const c = v.geo?.country || \"UNKNOWN\";\n            countryMap.set(c, (countryMap.get(c) || 0) + 1);\n        });\n        const byCountry = Array.from(countryMap.entries()).map(([country, count])=>({\n                country,\n                count\n            })).sort((a, b)=>b.count - a.count).slice(0, 20);\n        // Recent visits (last 20)\n        const recent = visits.filter((v)=>!!v.createdAt).slice(0, 20).map((v)=>({\n                createdAt: v.createdAt?.toISOString?.() || null,\n                route: v.route || null,\n                ip: v.ip || null,\n                userAgent: v.userAgent || null,\n                geo: v.geo || {}\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            users: {\n                total: totalUsers,\n                byType: userCounts,\n                dailyRegistrations\n            },\n            visitors: {\n                totalVisits,\n                uniqueSessions,\n                dailyVisitors,\n                topRoutes,\n                byCountry,\n                recent\n            },\n            profiles: {\n                avgCompleteness,\n                completedOver80,\n                completenessBuckets,\n                sampleSize: recentUsers.length\n            },\n            since: since.toISOString(),\n            generatedAt: new Date().toISOString()\n        });\n    } catch (e) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: e?.message || \"Failed\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/analytics/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/firebase/config.ts":
/*!************************************!*\
  !*** ./src/lib/firebase/config.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analytics: () => (/* binding */ analytics),\n/* harmony export */   app: () => (/* binding */ app),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   checkFirestoreConnection: () => (/* binding */ checkFirestoreConnection),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   firebaseConfig: () => (/* binding */ firebaseConfig),\n/* harmony export */   geideaConfig: () => (/* binding */ geideaConfig),\n/* harmony export */   hasValidConfig: () => (/* binding */ hasValidConfig),\n/* harmony export */   hasValidGeideaConfig: () => (/* binding */ hasValidGeideaConfig),\n/* harmony export */   missingVars: () => (/* binding */ missingVars),\n/* harmony export */   retryOperation: () => (/* binding */ retryOperation),\n/* harmony export */   storage: () => (/* binding */ storage),\n/* harmony export */   validateFirebaseConfig: () => (/* binding */ validateFirebaseConfig),\n/* harmony export */   validateGeideaConfig: () => (/* binding */ validateGeideaConfig)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(rsc)/./node_modules/firebase/app/dist/index.mjs\");\n/* harmony import */ var firebase_analytics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/analytics */ \"(rsc)/./node_modules/firebase/analytics/dist/index.mjs\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"(rsc)/./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"(rsc)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/storage */ \"(rsc)/./node_modules/firebase/storage/dist/index.mjs\");\n/* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error-handler */ \"(rsc)/./src/lib/firebase/error-handler.ts\");\n// src/lib/firebase/config.ts\n\n\n\n\n\n\n// التحقق من متغيرات البيئة\nconst requiredEnvVars = {\n    apiKey: \"AIzaSyDCQQxUbeQQrlty5HnF65-7TK0TB2zB7R4\",\n    authDomain: \"hagzzgo-87884.firebaseapp.com\",\n    projectId: \"hagzzgo-87884\",\n    storageBucket: \"hagzzgo-87884.firebasestorage.app\",\n    messagingSenderId: \"865241332465\",\n    appId: \"1:865241332465:web:158ed5fb2f0a80eecf0750\",\n    measurementId: \"G-RQ3ENTG6KJ\"\n};\n// التحقق من وجود المتغيرات المطلوبة\nconst missingVars = Object.entries(requiredEnvVars).filter(([key, value])=>!value || value === \"your_firebase_api_key_here\" || value === \"your_firebase_api_key\" || value === \"your_project.firebaseapp.com\" || value === \"your_project_id\" || value === \"your_project.appspot.com\" || value === \"your_sender_id\" || value === \"your_app_id\" || value === \"your_measurement_id\" || value.startsWith(\"your_\")).map(([key])=>key);\nconst hasValidConfig = missingVars.length === 0;\n// إظهار تحذير فقط في وضع التطوير وإذا كانت المتغيرات ناقصة\nif (!hasValidConfig && \"development\" === \"development\") {\n    console.warn(\"⚠️ Firebase environment variables are missing or using placeholder values.\");\n    console.warn(\"Missing/placeholder variables:\", missingVars);\n    console.warn(\"Please set proper Firebase configuration in your .env.local file\");\n    console.warn(\"Current Firebase config:\", requiredEnvVars);\n}\n// في وضع الإنتاج، لا نطرح خطأ إذا كانت المتغيرات ناقصة\nif (!hasValidConfig && \"development\" === \"production\") {}\n// تكوين Firebase - استخدام متغيرات البيئة فقط\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDCQQxUbeQQrlty5HnF65-7TK0TB2zB7R4\",\n    authDomain: \"hagzzgo-87884.firebaseapp.com\",\n    projectId: \"hagzzgo-87884\",\n    storageBucket: \"hagzzgo-87884.firebasestorage.app\",\n    messagingSenderId: \"865241332465\",\n    appId: \"1:865241332465:web:158ed5fb2f0a80eecf0750\",\n    measurementId: \"G-RQ3ENTG6KJ\"\n};\n// تكوين Geidea (server-side only) - بدون credentials مكشوفة\nconst geideaConfig = {\n    merchantPublicKey: process.env.GEIDEA_MERCHANT_PUBLIC_KEY || \"3448c010-87b1-41e7-9771-cac444268cfb\",\n    apiPassword: process.env.GEIDEA_API_PASSWORD || \"edfd5eee-fd1b-4932-9ee1-d6d9ba7599f0\",\n    webhookSecret: process.env.GEIDEA_WEBHOOK_SECRET || \"geidea_webhook_secret_production_2024\",\n    baseUrl: process.env.GEIDEA_BASE_URL || \"https://api.merchant.geidea.net\",\n    isTestMode: false\n};\n// التحقق من صحة تكوين Geidea (server-side only)\nconst validateGeideaConfig = ()=>{\n    // لدينا مفاتيح إنتاج حقيقية من لوحة Geidea\n    // لذا نعتبر التكوين صحيح دائماً\n    return true;\n};\nlet app;\nlet auth;\nlet db;\nlet analytics = null;\nlet storage;\n// Initialize Firebase only once\nif (!(0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length) {\n    try {\n        // التحقق من صحة التكوين قبل التهيئة\n        if (!hasValidConfig) {\n            console.warn(\"⚠️ Firebase configuration is missing or invalid\");\n            console.warn(\"Please set proper Firebase configuration in your .env.local file\");\n            console.warn(\"Current config:\", firebaseConfig);\n            // في وضع الإنتاج، لا نطرح خطأ بل نستخدم تكوين افتراضي\n            if (false) {} else {\n                throw new Error(\"Firebase configuration is required for development\");\n            }\n        } else {\n            console.log(\"\\uD83D\\uDD27 Initializing Firebase with config:\", {\n                apiKey: firebaseConfig.apiKey ? \"✅ Set\" : \"❌ Missing\",\n                authDomain: firebaseConfig.authDomain ? \"✅ Set\" : \"❌ Missing\",\n                projectId: firebaseConfig.projectId ? \"✅ Set\" : \"❌ Missing\",\n                storageBucket: firebaseConfig.storageBucket ? \"✅ Set\" : \"❌ Missing\",\n                messagingSenderId: firebaseConfig.messagingSenderId ? \"✅ Set\" : \"❌ Missing\",\n                appId: firebaseConfig.appId ? \"✅ Set\" : \"❌ Missing\",\n                measurementId: firebaseConfig.measurementId ? \"✅ Set\" : \"❌ Missing\"\n            });\n            app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig);\n            auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(app);\n            // Initialize Firestore with robust network settings for flaky networks/proxies\n            db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.initializeFirestore)(app, {\n                ignoreUndefinedProperties: true,\n                cacheSizeBytes: 50 * 1024 * 1024,\n                // Reduce WebChannel 400 terminate noise by auto switching to long-polling when needed\n                experimentalAutoDetectLongPolling: true,\n                useFetchStreams: false\n            });\n            // Note: Firestore network is enabled by default. Avoid toggling it at runtime to prevent race conditions.\n            storage = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_4__.getStorage)(app);\n            // Initialize Analytics in browser only\n            if (false) {}\n            console.log(\"✅ Firebase initialized successfully\");\n            // إضافة error handling للـ Firestore\n            if (db) {\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.enableNetwork)(db).catch((err)=>{\n                    console.warn(\"⚠️ Firestore network enable failed:\", err);\n                });\n            }\n        }\n    } catch (error) {\n        if ((0,_error_handler__WEBPACK_IMPORTED_MODULE_5__.shouldSuppressFirebaseError)(error)) {\n            (0,_error_handler__WEBPACK_IMPORTED_MODULE_5__.logFirebaseError)(error, \"Firebase initialization\");\n        } else {\n            console.error(\"❌ Firebase initialization error:\", error);\n            console.error(\"Firebase config used:\", firebaseConfig);\n            throw error;\n        }\n    }\n} else {\n    app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)()[0];\n    auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(app);\n    db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getFirestore)(app);\n    storage = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_4__.getStorage)(app);\n    if (false) {}\n}\n// التحقق من صحة تكوين Firebase\nfunction validateFirebaseConfig() {\n    const requiredFields = [\n        \"apiKey\",\n        \"authDomain\",\n        \"projectId\",\n        \"storageBucket\",\n        \"messagingSenderId\",\n        \"appId\"\n    ];\n    const missingFields = requiredFields.filter((field)=>{\n        const value = firebaseConfig[field];\n        return !value || value === \"your_firebase_api_key_here\" || value === \"your_firebase_api_key\" || value === \"your_project.firebaseapp.com\" || value === \"your_project_id\" || value === \"your_project.appspot.com\" || value === \"your_sender_id\" || value === \"your_app_id\" || value === \"your_measurement_id\" || value && value.startsWith(\"your_\");\n    });\n    if (missingFields.length > 0) {\n        console.error(\"❌ Firebase configuration missing required fields:\", missingFields);\n        return false;\n    }\n    return true;\n}\n// Enhanced Firestore connection check\nconst checkFirestoreConnection = async ()=>{\n    try {\n        // In development, skip strict connection checks to avoid false negatives from local environments\n        if (true) {\n            return true;\n        }\n        // Perform a lightweight read; do not toggle network at runtime\n        const testRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(db, \"_meta\", \"__healthcheck__\");\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDoc)(testRef);\n        console.log(\"✅ Firestore connection verified\");\n        return true;\n    } catch (error) {\n        // If rules block the doc, connectivity still works\n        if (error?.code === \"permission-denied\") {\n            console.log(\"✅ Firestore reachable (permission-denied on health doc)\");\n            return true;\n        }\n        console.error(\"❌ Firestore connection failed:\", error);\n        return false;\n    }\n};\n// Enhanced retry operation with better error handling\nconst retryOperation = async (operation, maxRetries = 3, baseDelay = 1000)=>{\n    let lastError;\n    for(let attempt = 0; attempt <= maxRetries; attempt++){\n        try {\n            return await operation();\n        } catch (error) {\n            lastError = error;\n            // Check if it's a network-related error\n            const isNetworkError = error instanceof Error && (error.message.includes(\"network\") || error.message.includes(\"connection\") || error.message.includes(\"timeout\"));\n            if (attempt === maxRetries || !isNetworkError) {\n                console.error(`❌ Operation failed after ${attempt + 1} attempts:`, error);\n                throw lastError;\n            }\n            // Exponential backoff with jitter\n            const delay = baseDelay * Math.pow(2, attempt) + Math.random() * 1000;\n            console.log(`🔄 Retry attempt ${attempt + 1}/${maxRetries} in ${Math.round(delay)}ms`);\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n    }\n    throw lastError;\n};\n// التحقق من تكوين Geidea\nconst hasValidGeideaConfig = validateGeideaConfig();\nif (true) {\n    console.log(\"✅ Geidea configuration validated with TEST credentials\");\n}\n// تصدير الخدمات المهيأة\n\n// Export configuration for debugging\n\n// Export validation functions\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/firebase/config.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/firebase/error-handler.ts":
/*!*******************************************!*\
  !*** ./src/lib/firebase/error-handler.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFirebaseErrorBoundary: () => (/* binding */ createFirebaseErrorBoundary),\n/* harmony export */   handleFirebaseError: () => (/* binding */ handleFirebaseError),\n/* harmony export */   logFirebaseError: () => (/* binding */ logFirebaseError),\n/* harmony export */   shouldSuppressFirebaseError: () => (/* binding */ shouldSuppressFirebaseError)\n/* harmony export */ });\n// Firebase Error Handler\n// معالجة محسنة لأخطاء Firebase\nfunction handleFirebaseError(error) {\n    const isDevelopment = \"development\" === \"development\";\n    // تحليل نوع الخطأ\n    if (error?.code === \"auth/invalid-api-key\") {\n        return {\n            code: \"INVALID_API_KEY\",\n            message: isDevelopment ? \"⚠️ Firebase API key is invalid (development mode)\" : \"Firebase configuration error\",\n            isDevelopment\n        };\n    }\n    if (error?.code === \"auth/network-request-failed\") {\n        return {\n            code: \"NETWORK_ERROR\",\n            message: isDevelopment ? \"⚠️ Network error (development mode)\" : \"Network connection failed\",\n            isDevelopment\n        };\n    }\n    if (error?.message?.includes(\"API key not valid\")) {\n        return {\n            code: \"API_KEY_INVALID\",\n            message: isDevelopment ? \"⚠️ API key validation failed (development mode)\" : \"Authentication failed\",\n            isDevelopment\n        };\n    }\n    if (error?.message?.includes(\"Installations: Create Installation request failed\")) {\n        return {\n            code: \"INSTALLATION_FAILED\",\n            message: isDevelopment ? \"⚠️ Firebase installation failed (development mode)\" : \"Service initialization failed\",\n            isDevelopment\n        };\n    }\n    if (error?.message?.includes(\"Failed to fetch this Firebase app\")) {\n        return {\n            code: \"CONFIG_FETCH_FAILED\",\n            message: isDevelopment ? \"⚠️ Firebase config fetch failed (development mode)\" : \"Configuration error\",\n            isDevelopment\n        };\n    }\n    // خطأ عام\n    return {\n        code: \"UNKNOWN_ERROR\",\n        message: isDevelopment ? \"⚠️ Firebase error (development mode)\" : \"An error occurred\",\n        isDevelopment\n    };\n}\nfunction logFirebaseError(error, context) {\n    const errorInfo = handleFirebaseError(error);\n    if (errorInfo.isDevelopment) {\n        // في وضع التطوير، نعرض رسالة مبسطة\n        console.warn(`${errorInfo.message}${context ? ` - ${context}` : \"\"}`);\n    } else {\n        // في الإنتاج، نعرض التفاصيل الكاملة\n        console.error(\"Firebase Error:\", {\n            code: errorInfo.code,\n            message: errorInfo.message,\n            originalError: error,\n            context\n        });\n    }\n}\nfunction shouldSuppressFirebaseError(error) {\n    const isDevelopment = \"development\" === \"development\";\n    if (!isDevelopment) {\n        return false; // لا نخفي الأخطاء في الإنتاج\n    }\n    const errorMessage = error?.message || \"\";\n    const errorCode = error?.code || \"\";\n    // قائمة بالأخطاء التي يجب إخفاؤها في التطوير\n    const suppressibleErrors = [\n        \"API key not valid\",\n        \"Installations: Create Installation request failed\",\n        \"Failed to fetch this Firebase app\",\n        \"Dynamic config fetch failed\",\n        \"auth/invalid-api-key\",\n        \"auth/network-request-failed\"\n    ];\n    return suppressibleErrors.some((suppressibleError)=>errorMessage.includes(suppressibleError) || errorCode.includes(suppressibleError));\n}\nfunction createFirebaseErrorBoundary() {\n    return {\n        onError: (error, context)=>{\n            if (shouldSuppressFirebaseError(error)) {\n                logFirebaseError(error, context);\n                return; // لا نرمي الخطأ مرة أخرى\n            }\n            // للأخطاء المهمة، نرميها مرة أخرى\n            throw error;\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2ZpcmViYXNlL2Vycm9yLWhhbmRsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHlCQUF5QjtBQUN6QiwrQkFBK0I7QUFReEIsU0FBU0Esb0JBQW9CQyxLQUFVO0lBQzVDLE1BQU1DLGdCQUFnQkMsa0JBQXlCO0lBRS9DLGtCQUFrQjtJQUNsQixJQUFJRixPQUFPRyxTQUFTLHdCQUF3QjtRQUMxQyxPQUFPO1lBQ0xBLE1BQU07WUFDTkMsU0FBU0gsZ0JBQWdCLHNEQUFzRDtZQUMvRUE7UUFDRjtJQUNGO0lBRUEsSUFBSUQsT0FBT0csU0FBUywrQkFBK0I7UUFDakQsT0FBTztZQUNMQSxNQUFNO1lBQ05DLFNBQVNILGdCQUFnQix3Q0FBd0M7WUFDakVBO1FBQ0Y7SUFDRjtJQUVBLElBQUlELE9BQU9JLFNBQVNDLFNBQVMsc0JBQXNCO1FBQ2pELE9BQU87WUFDTEYsTUFBTTtZQUNOQyxTQUFTSCxnQkFBZ0Isb0RBQW9EO1lBQzdFQTtRQUNGO0lBQ0Y7SUFFQSxJQUFJRCxPQUFPSSxTQUFTQyxTQUFTLHNEQUFzRDtRQUNqRixPQUFPO1lBQ0xGLE1BQU07WUFDTkMsU0FBU0gsZ0JBQWdCLHVEQUF1RDtZQUNoRkE7UUFDRjtJQUNGO0lBRUEsSUFBSUQsT0FBT0ksU0FBU0MsU0FBUyxzQ0FBc0M7UUFDakUsT0FBTztZQUNMRixNQUFNO1lBQ05DLFNBQVNILGdCQUFnQix1REFBdUQ7WUFDaEZBO1FBQ0Y7SUFDRjtJQUVBLFVBQVU7SUFDVixPQUFPO1FBQ0xFLE1BQU07UUFDTkMsU0FBU0gsZ0JBQWdCLHlDQUF5QztRQUNsRUE7SUFDRjtBQUNGO0FBRU8sU0FBU0ssaUJBQWlCTixLQUFVLEVBQUVPLE9BQWdCO0lBQzNELE1BQU1DLFlBQVlULG9CQUFvQkM7SUFFdEMsSUFBSVEsVUFBVVAsYUFBYSxFQUFFO1FBQzNCLG1DQUFtQztRQUNuQ1EsUUFBUUMsSUFBSSxDQUFDLENBQUMsRUFBRUYsVUFBVUosT0FBTyxDQUFDLEVBQUVHLFVBQVUsQ0FBQyxHQUFHLEVBQUVBLFFBQVEsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUN0RSxPQUFPO1FBQ0wsb0NBQW9DO1FBQ3BDRSxRQUFRVCxLQUFLLENBQUMsbUJBQW1CO1lBQy9CRyxNQUFNSyxVQUFVTCxJQUFJO1lBQ3BCQyxTQUFTSSxVQUFVSixPQUFPO1lBQzFCTyxlQUFlWDtZQUNmTztRQUNGO0lBQ0Y7QUFDRjtBQUVPLFNBQVNLLDRCQUE0QlosS0FBVTtJQUNwRCxNQUFNQyxnQkFBZ0JDLGtCQUF5QjtJQUUvQyxJQUFJLENBQUNELGVBQWU7UUFDbEIsT0FBTyxPQUFPLDZCQUE2QjtJQUM3QztJQUVBLE1BQU1ZLGVBQWViLE9BQU9JLFdBQVc7SUFDdkMsTUFBTVUsWUFBWWQsT0FBT0csUUFBUTtJQUVqQyw2Q0FBNkM7SUFDN0MsTUFBTVkscUJBQXFCO1FBQ3pCO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBRUQsT0FBT0EsbUJBQW1CQyxJQUFJLENBQUNDLENBQUFBLG9CQUM3QkosYUFBYVIsUUFBUSxDQUFDWSxzQkFDdEJILFVBQVVULFFBQVEsQ0FBQ1k7QUFFdkI7QUFFTyxTQUFTQztJQUNkLE9BQU87UUFDTEMsU0FBUyxDQUFDbkIsT0FBWU87WUFDcEIsSUFBSUssNEJBQTRCWixRQUFRO2dCQUN0Q00saUJBQWlCTixPQUFPTztnQkFDeEIsUUFBUSx5QkFBeUI7WUFDbkM7WUFFQSxrQ0FBa0M7WUFDbEMsTUFBTVA7UUFDUjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbDdsbS8uL3NyYy9saWIvZmlyZWJhc2UvZXJyb3ItaGFuZGxlci50cz9mZTY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpcmViYXNlIEVycm9yIEhhbmRsZXJcclxuLy8g2YXYudin2YTYrNipINmF2K3Ys9mG2Kkg2YTYo9iu2LfYp9ihIEZpcmViYXNlXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmViYXNlRXJyb3JJbmZvIHtcclxuICBjb2RlOiBzdHJpbmc7XHJcbiAgbWVzc2FnZTogc3RyaW5nO1xyXG4gIGlzRGV2ZWxvcG1lbnQ6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVGaXJlYmFzZUVycm9yKGVycm9yOiBhbnkpOiBGaXJlYmFzZUVycm9ySW5mbyB7XHJcbiAgY29uc3QgaXNEZXZlbG9wbWVudCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnO1xyXG4gIFxyXG4gIC8vINiq2K3ZhNmK2YQg2YbZiNi5INin2YTYrti32KNcclxuICBpZiAoZXJyb3I/LmNvZGUgPT09ICdhdXRoL2ludmFsaWQtYXBpLWtleScpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNvZGU6ICdJTlZBTElEX0FQSV9LRVknLFxyXG4gICAgICBtZXNzYWdlOiBpc0RldmVsb3BtZW50ID8gJ+KaoO+4jyBGaXJlYmFzZSBBUEkga2V5IGlzIGludmFsaWQgKGRldmVsb3BtZW50IG1vZGUpJyA6ICdGaXJlYmFzZSBjb25maWd1cmF0aW9uIGVycm9yJyxcclxuICAgICAgaXNEZXZlbG9wbWVudFxyXG4gICAgfTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKGVycm9yPy5jb2RlID09PSAnYXV0aC9uZXR3b3JrLXJlcXVlc3QtZmFpbGVkJykge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgY29kZTogJ05FVFdPUktfRVJST1InLFxyXG4gICAgICBtZXNzYWdlOiBpc0RldmVsb3BtZW50ID8gJ+KaoO+4jyBOZXR3b3JrIGVycm9yIChkZXZlbG9wbWVudCBtb2RlKScgOiAnTmV0d29yayBjb25uZWN0aW9uIGZhaWxlZCcsXHJcbiAgICAgIGlzRGV2ZWxvcG1lbnRcclxuICAgIH07XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChlcnJvcj8ubWVzc2FnZT8uaW5jbHVkZXMoJ0FQSSBrZXkgbm90IHZhbGlkJykpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNvZGU6ICdBUElfS0VZX0lOVkFMSUQnLFxyXG4gICAgICBtZXNzYWdlOiBpc0RldmVsb3BtZW50ID8gJ+KaoO+4jyBBUEkga2V5IHZhbGlkYXRpb24gZmFpbGVkIChkZXZlbG9wbWVudCBtb2RlKScgOiAnQXV0aGVudGljYXRpb24gZmFpbGVkJyxcclxuICAgICAgaXNEZXZlbG9wbWVudFxyXG4gICAgfTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKGVycm9yPy5tZXNzYWdlPy5pbmNsdWRlcygnSW5zdGFsbGF0aW9uczogQ3JlYXRlIEluc3RhbGxhdGlvbiByZXF1ZXN0IGZhaWxlZCcpKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBjb2RlOiAnSU5TVEFMTEFUSU9OX0ZBSUxFRCcsXHJcbiAgICAgIG1lc3NhZ2U6IGlzRGV2ZWxvcG1lbnQgPyAn4pqg77iPIEZpcmViYXNlIGluc3RhbGxhdGlvbiBmYWlsZWQgKGRldmVsb3BtZW50IG1vZGUpJyA6ICdTZXJ2aWNlIGluaXRpYWxpemF0aW9uIGZhaWxlZCcsXHJcbiAgICAgIGlzRGV2ZWxvcG1lbnRcclxuICAgIH07XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChlcnJvcj8ubWVzc2FnZT8uaW5jbHVkZXMoJ0ZhaWxlZCB0byBmZXRjaCB0aGlzIEZpcmViYXNlIGFwcCcpKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBjb2RlOiAnQ09ORklHX0ZFVENIX0ZBSUxFRCcsXHJcbiAgICAgIG1lc3NhZ2U6IGlzRGV2ZWxvcG1lbnQgPyAn4pqg77iPIEZpcmViYXNlIGNvbmZpZyBmZXRjaCBmYWlsZWQgKGRldmVsb3BtZW50IG1vZGUpJyA6ICdDb25maWd1cmF0aW9uIGVycm9yJyxcclxuICAgICAgaXNEZXZlbG9wbWVudFxyXG4gICAgfTtcclxuICB9XHJcbiAgXHJcbiAgLy8g2K7Yt9ijINi52KfZhVxyXG4gIHJldHVybiB7XHJcbiAgICBjb2RlOiAnVU5LTk9XTl9FUlJPUicsXHJcbiAgICBtZXNzYWdlOiBpc0RldmVsb3BtZW50ID8gJ+KaoO+4jyBGaXJlYmFzZSBlcnJvciAoZGV2ZWxvcG1lbnQgbW9kZSknIDogJ0FuIGVycm9yIG9jY3VycmVkJyxcclxuICAgIGlzRGV2ZWxvcG1lbnRcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbG9nRmlyZWJhc2VFcnJvcihlcnJvcjogYW55LCBjb250ZXh0Pzogc3RyaW5nKSB7XHJcbiAgY29uc3QgZXJyb3JJbmZvID0gaGFuZGxlRmlyZWJhc2VFcnJvcihlcnJvcik7XHJcbiAgXHJcbiAgaWYgKGVycm9ySW5mby5pc0RldmVsb3BtZW50KSB7XHJcbiAgICAvLyDZgdmKINmI2LbYuSDYp9mE2KrYt9mI2YrYsdiMINmG2LnYsdi2INix2LPYp9mE2Kkg2YXYqNiz2LfYqVxyXG4gICAgY29uc29sZS53YXJuKGAke2Vycm9ySW5mby5tZXNzYWdlfSR7Y29udGV4dCA/IGAgLSAke2NvbnRleHR9YCA6ICcnfWApO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyDZgdmKINin2YTYpdmG2KrYp9is2Iwg2YbYudix2LYg2KfZhNiq2YHYp9i12YrZhCDYp9mE2YPYp9mF2YTYqVxyXG4gICAgY29uc29sZS5lcnJvcignRmlyZWJhc2UgRXJyb3I6Jywge1xyXG4gICAgICBjb2RlOiBlcnJvckluZm8uY29kZSxcclxuICAgICAgbWVzc2FnZTogZXJyb3JJbmZvLm1lc3NhZ2UsXHJcbiAgICAgIG9yaWdpbmFsRXJyb3I6IGVycm9yLFxyXG4gICAgICBjb250ZXh0XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzaG91bGRTdXBwcmVzc0ZpcmViYXNlRXJyb3IoZXJyb3I6IGFueSk6IGJvb2xlYW4ge1xyXG4gIGNvbnN0IGlzRGV2ZWxvcG1lbnQgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JztcclxuICBcclxuICBpZiAoIWlzRGV2ZWxvcG1lbnQpIHtcclxuICAgIHJldHVybiBmYWxzZTsgLy8g2YTYpyDZhtiu2YHZiiDYp9mE2KPYrti32KfYoSDZgdmKINin2YTYpdmG2KrYp9isXHJcbiAgfVxyXG4gIFxyXG4gIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yPy5tZXNzYWdlIHx8ICcnO1xyXG4gIGNvbnN0IGVycm9yQ29kZSA9IGVycm9yPy5jb2RlIHx8ICcnO1xyXG4gIFxyXG4gIC8vINmC2KfYptmF2Kkg2KjYp9mE2KPYrti32KfYoSDYp9mE2KrZiiDZitis2Kgg2KXYrtmB2KfYpNmH2Kcg2YHZiiDYp9mE2KrYt9mI2YrYsVxyXG4gIGNvbnN0IHN1cHByZXNzaWJsZUVycm9ycyA9IFtcclxuICAgICdBUEkga2V5IG5vdCB2YWxpZCcsXHJcbiAgICAnSW5zdGFsbGF0aW9uczogQ3JlYXRlIEluc3RhbGxhdGlvbiByZXF1ZXN0IGZhaWxlZCcsXHJcbiAgICAnRmFpbGVkIHRvIGZldGNoIHRoaXMgRmlyZWJhc2UgYXBwJyxcclxuICAgICdEeW5hbWljIGNvbmZpZyBmZXRjaCBmYWlsZWQnLFxyXG4gICAgJ2F1dGgvaW52YWxpZC1hcGkta2V5JyxcclxuICAgICdhdXRoL25ldHdvcmstcmVxdWVzdC1mYWlsZWQnXHJcbiAgXTtcclxuICBcclxuICByZXR1cm4gc3VwcHJlc3NpYmxlRXJyb3JzLnNvbWUoc3VwcHJlc3NpYmxlRXJyb3IgPT4gXHJcbiAgICBlcnJvck1lc3NhZ2UuaW5jbHVkZXMoc3VwcHJlc3NpYmxlRXJyb3IpIHx8IFxyXG4gICAgZXJyb3JDb2RlLmluY2x1ZGVzKHN1cHByZXNzaWJsZUVycm9yKVxyXG4gICk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGaXJlYmFzZUVycm9yQm91bmRhcnkoKSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIG9uRXJyb3I6IChlcnJvcjogYW55LCBjb250ZXh0Pzogc3RyaW5nKSA9PiB7XHJcbiAgICAgIGlmIChzaG91bGRTdXBwcmVzc0ZpcmViYXNlRXJyb3IoZXJyb3IpKSB7XHJcbiAgICAgICAgbG9nRmlyZWJhc2VFcnJvcihlcnJvciwgY29udGV4dCk7XHJcbiAgICAgICAgcmV0dXJuOyAvLyDZhNinINmG2LHZhdmKINin2YTYrti32KMg2YXYsdipINij2K7YsdmJXHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC8vINmE2YTYo9iu2LfYp9ihINin2YTZhdmH2YXYqdiMINmG2LHZhdmK2YfYpyDZhdix2Kkg2KPYrtix2YlcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfTtcclxufSBcclxuIl0sIm5hbWVzIjpbImhhbmRsZUZpcmViYXNlRXJyb3IiLCJlcnJvciIsImlzRGV2ZWxvcG1lbnQiLCJwcm9jZXNzIiwiY29kZSIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsImxvZ0ZpcmViYXNlRXJyb3IiLCJjb250ZXh0IiwiZXJyb3JJbmZvIiwiY29uc29sZSIsIndhcm4iLCJvcmlnaW5hbEVycm9yIiwic2hvdWxkU3VwcHJlc3NGaXJlYmFzZUVycm9yIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JDb2RlIiwic3VwcHJlc3NpYmxlRXJyb3JzIiwic29tZSIsInN1cHByZXNzaWJsZUVycm9yIiwiY3JlYXRlRmlyZWJhc2VFcnJvckJvdW5kYXJ5Iiwib25FcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/firebase/error-handler.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@firebase","vendor-chunks/@grpc","vendor-chunks/next","vendor-chunks/firebase","vendor-chunks/protobufjs","vendor-chunks/long","vendor-chunks/@opentelemetry","vendor-chunks/@protobufjs","vendor-chunks/lodash.camelcase","vendor-chunks/tslib","vendor-chunks/idb"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.ts&appDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();