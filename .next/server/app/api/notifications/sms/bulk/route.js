"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/notifications/sms/bulk/route";
exports.ids = ["app/api/notifications/sms/bulk/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute&page=%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute.ts&appDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute&page=%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute.ts&appDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_el7lm25_main_1_el7lm25_main_src_app_api_notifications_sms_bulk_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/notifications/sms/bulk/route.ts */ \"(rsc)/./src/app/api/notifications/sms/bulk/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/notifications/sms/bulk/route\",\n        pathname: \"/api/notifications/sms/bulk\",\n        filename: \"route\",\n        bundlePath: \"app/api/notifications/sms/bulk/route\"\n    },\n    resolvedPagePath: \"D:\\\\el7lm25-main (1)\\\\el7lm25-main\\\\src\\\\app\\\\api\\\\notifications\\\\sms\\\\bulk\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_el7lm25_main_1_el7lm25_main_src_app_api_notifications_sms_bulk_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/notifications/sms/bulk/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZub3RpZmljYXRpb25zJTJGc21zJTJGYnVsayUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbm90aWZpY2F0aW9ucyUyRnNtcyUyRmJ1bGslMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZub3RpZmljYXRpb25zJTJGc21zJTJGYnVsayUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDZWw3bG0yNS1tYWluJTIwKDEpJTVDZWw3bG0yNS1tYWluJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1EJTNBJTVDZWw3bG0yNS1tYWluJTIwKDEpJTVDZWw3bG0yNS1tYWluJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDcUM7QUFDbEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbDdsbS8/YTlmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJEOlxcXFxlbDdsbTI1LW1haW4gKDEpXFxcXGVsN2xtMjUtbWFpblxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxub3RpZmljYXRpb25zXFxcXHNtc1xcXFxidWxrXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbm90aWZpY2F0aW9ucy9zbXMvYnVsay9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL25vdGlmaWNhdGlvbnMvc21zL2J1bGtcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL25vdGlmaWNhdGlvbnMvc21zL2J1bGsvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFxlbDdsbTI1LW1haW4gKDEpXFxcXGVsN2xtMjUtbWFpblxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxub3RpZmljYXRpb25zXFxcXHNtc1xcXFxidWxrXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9ub3RpZmljYXRpb25zL3Ntcy9idWxrL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute&page=%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute.ts&appDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/notifications/sms/bulk/route.ts":
/*!*****************************************************!*\
  !*** ./src/app/api/notifications/sms/bulk/route.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n// تنسيق رقم الهاتف المصري\nconst formatEgyptianPhone = (phone)=>{\n    // إزالة جميع المسافات والرموز\n    let cleaned = phone.replace(/\\s+/g, \"\").replace(/[^\\d+]/g, \"\");\n    // إذا كان الرقم يبدأ بـ 0 (مصري محلي)\n    if (cleaned.startsWith(\"0\")) {\n        return \"+20\" + cleaned.substring(1);\n    }\n    // إذا كان الرقم يبدأ بـ 20 (مصري بدون +)\n    if (cleaned.startsWith(\"20\")) {\n        return \"+\" + cleaned;\n    }\n    // إذا كان الرقم يبدأ بـ +20 (مصري صحيح)\n    if (cleaned.startsWith(\"+20\")) {\n        return cleaned;\n    }\n    // إذا كان الرقم 11 رقم (مصري بدون رمز الدولة)\n    if (cleaned.length === 11 && cleaned.startsWith(\"01\")) {\n        return \"+20\" + cleaned.substring(1);\n    }\n    // إذا كان الرقم 10 أرقام (مصري بدون 0)\n    if (cleaned.length === 10 && cleaned.startsWith(\"1\")) {\n        return \"+20\" + cleaned;\n    }\n    // إذا لم يكن مصري، نعيده كما هو\n    return cleaned;\n};\nasync function POST(request) {\n    const startTime = Date.now();\n    try {\n        console.log(\"\\uD83D\\uDCF1 === بدء طلب SMS Bulk ===\");\n        console.log(\"\\uD83D\\uDD50 وقت البداية:\", new Date().toISOString());\n        const { phoneNumbers, message } = await request.json();\n        console.log(\"\\uD83D\\uDCF1 البيانات المستلمة:\", {\n            phoneNumbersCount: phoneNumbers?.length,\n            messageLength: message?.length\n        });\n        if (!phoneNumbers || !Array.isArray(phoneNumbers) || phoneNumbers.length === 0 || !message) {\n            console.error(\"❌ بيانات مفقودة:\", {\n                hasPhoneNumbers: !!phoneNumbers,\n                isArray: Array.isArray(phoneNumbers),\n                phoneCount: phoneNumbers?.length,\n                hasMessage: !!message\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"مصفوفة أرقام الهاتف والرسالة مطلوبان\"\n            }, {\n                status: 400\n            });\n        }\n        // تنسيق أرقام الهاتف\n        const formattedPhoneNumbers = phoneNumbers.map(formatEgyptianPhone);\n        console.log(\"\\uD83D\\uDCF1 تنسيق أرقام الهاتف:\", {\n            original: phoneNumbers,\n            formatted: formattedPhoneNumbers\n        });\n        // في وضع التطوير، نعرض رسالة محاكاة بدلاً من الإرسال الفعلي\n        if ( true && process.env.ENABLE_SMS_SIMULATION === \"true\") {\n            console.log(\"\\uD83D\\uDD27 وضع التطوير - محاكاة SMS Bulk\");\n            console.log(\"\\uD83D\\uDCF1 سيتم إرسال SMS إلى:\", formattedPhoneNumbers);\n            console.log(\"\\uD83D\\uDCF1 الرسالة:\", message);\n            // محاكاة تأخير الشبكة\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            const responseTime = Date.now() - startTime;\n            console.log(\"✅ محاكاة SMS Bulk ناجحة\");\n            console.log(\"⏱️ وقت الاستجابة:\", responseTime + \"ms\");\n            console.log(\"\\uD83D\\uDCF1 === انتهاء طلب SMS Bulk ===\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"تم إرسال الإشعار عبر SMS Bulk بنجاح (محاكاة)\",\n                method: \"sms_bulk\",\n                simulated: true,\n                originalPhones: phoneNumbers,\n                formattedPhones: formattedPhoneNumbers,\n                responseTime\n            });\n        }\n        // الحصول على Token من متغيرات البيئة\n        const BEON_TOKEN = process.env.BEON_V3_TOKEN || \"Yt3A3RwMQHx49trsz1EMgSKP8qOD0CSVJXdJxy6IqNNtcYblsYWtfVAtaJpv\";\n        const SMS_ENDPOINT = \"https://v3.api.beon.chat/api/v3/messages/sms/bulk\";\n        console.log(\"\\uD83D\\uDD27 تكوين SMS Bulk:\", {\n            token: BEON_TOKEN.substring(0, 10) + \"...\",\n            endpoint: SMS_ENDPOINT,\n            phoneCount: formattedPhoneNumbers.length\n        });\n        console.log(\"\\uD83D\\uDCF1 إرسال SMS Bulk إلى:\", formattedPhoneNumbers);\n        console.log(\"\\uD83D\\uDCF1 الرسالة:\", message);\n        // إرسال عبر SMS Bulk باستخدام API الصحيح\n        const apiStartTime = Date.now();\n        const response = await fetch(SMS_ENDPOINT, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"beon-token\": BEON_TOKEN\n            },\n            body: JSON.stringify({\n                phoneNumbers: formattedPhoneNumbers,\n                message: message\n            })\n        });\n        const apiResponseTime = Date.now() - apiStartTime;\n        const totalResponseTime = Date.now() - startTime;\n        console.log(\"\\uD83D\\uDCF1 استجابة API SMS Bulk:\", {\n            status: response.status,\n            statusText: response.statusText,\n            apiResponseTime: apiResponseTime + \"ms\",\n            totalResponseTime: totalResponseTime + \"ms\"\n        });\n        console.log(\"\\uD83D\\uDCF1 Headers الاستجابة:\", Object.fromEntries(response.headers.entries()));\n        // قراءة جسم الاستجابة إن وُجد للتحقق من أخطاء المزود\n        let responseBodyText = \"\";\n        try {\n            responseBodyText = await response.text();\n            if (responseBodyText) {\n                console.log(\"\\uD83D\\uDCC4 SMS Bulk Provider body:\", responseBodyText);\n            } else {\n                console.log(\"\\uD83D\\uDCC4 SMS Bulk Provider body: <empty>\");\n            }\n        } catch (e) {\n            console.log(\"⚠️ تعذر قراءة جسم الاستجابة من المزود\");\n        }\n        let providerJson = null;\n        if (responseBodyText) {\n            try {\n                providerJson = JSON.parse(responseBodyText);\n            } catch  {\n            // ليس JSON — نتحقق من وجود رسالة خطأ نصية معروفة\n            }\n        }\n        // كشف الأخطاء على مستوى المزود حتى لو كان HTTP 200\n        const providerErrorText = (responseBodyText || \"\").toLowerCase();\n        const providerStatus = providerJson?.status ?? providerJson?.code;\n        const isProviderError = providerStatus === 400 || providerStatus === \"400\" || providerErrorText.includes(\"public sender error\") || providerErrorText.includes(\"you can't use this api while you use public sender\");\n        if (response.ok && !isProviderError) {\n            console.log(\"✅ SMS Bulk تم إرساله بنجاح إلى:\", formattedPhoneNumbers);\n            console.log(\"\\uD83D\\uDCF1 === انتهاء طلب SMS Bulk ===\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"تم إرسال الإشعار عبر SMS Bulk بنجاح\",\n                method: \"sms_bulk\",\n                originalPhones: phoneNumbers,\n                formattedPhones: formattedPhoneNumbers,\n                providerStatus,\n                providerBody: providerJson || responseBodyText || null,\n                responseTime: totalResponseTime\n            });\n        } else {\n            const errorPayload = {\n                status: response.status,\n                statusText: response.statusText,\n                providerStatus,\n                providerBody: providerJson || responseBodyText || null,\n                phoneNumbers: formattedPhoneNumbers\n            };\n            console.error(\"❌ فشل إرسال SMS Bulk (مزود):\", errorPayload);\n            console.log(\"\\uD83D\\uDCF1 === انتهاء طلب SMS Bulk ===\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: providerJson?.message || `فشل في إرسال الإشعار عبر SMS Bulk: ${response.status} ${response.statusText}`,\n                details: errorPayload\n            }, {\n                status: 502\n            });\n        }\n    } catch (error) {\n        const responseTime = Date.now() - startTime;\n        console.error(\"❌ خطأ في SMS Bulk:\", error);\n        console.log(\"\\uD83D\\uDCF1 === انتهاء طلب SMS Bulk ===\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"حدث خطأ في إرسال الإشعار عبر SMS Bulk\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9ub3RpZmljYXRpb25zL3Ntcy9idWxrL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdEO0FBRXhELDBCQUEwQjtBQUMxQixNQUFNQyxzQkFBc0IsQ0FBQ0M7SUFDM0IsOEJBQThCO0lBQzlCLElBQUlDLFVBQVVELE1BQU1FLE9BQU8sQ0FBQyxRQUFRLElBQUlBLE9BQU8sQ0FBQyxXQUFXO0lBRTNELHNDQUFzQztJQUN0QyxJQUFJRCxRQUFRRSxVQUFVLENBQUMsTUFBTTtRQUMzQixPQUFPLFFBQVFGLFFBQVFHLFNBQVMsQ0FBQztJQUNuQztJQUVBLHlDQUF5QztJQUN6QyxJQUFJSCxRQUFRRSxVQUFVLENBQUMsT0FBTztRQUM1QixPQUFPLE1BQU1GO0lBQ2Y7SUFFQSx3Q0FBd0M7SUFDeEMsSUFBSUEsUUFBUUUsVUFBVSxDQUFDLFFBQVE7UUFDN0IsT0FBT0Y7SUFDVDtJQUVBLDhDQUE4QztJQUM5QyxJQUFJQSxRQUFRSSxNQUFNLEtBQUssTUFBTUosUUFBUUUsVUFBVSxDQUFDLE9BQU87UUFDckQsT0FBTyxRQUFRRixRQUFRRyxTQUFTLENBQUM7SUFDbkM7SUFFQSx1Q0FBdUM7SUFDdkMsSUFBSUgsUUFBUUksTUFBTSxLQUFLLE1BQU1KLFFBQVFFLFVBQVUsQ0FBQyxNQUFNO1FBQ3BELE9BQU8sUUFBUUY7SUFDakI7SUFFQSxnQ0FBZ0M7SUFDaEMsT0FBT0E7QUFDVDtBQUVPLGVBQWVLLEtBQUtDLE9BQW9CO0lBQzdDLE1BQU1DLFlBQVlDLEtBQUtDLEdBQUc7SUFFMUIsSUFBSTtRQUNGQyxRQUFRQyxHQUFHLENBQUM7UUFDWkQsUUFBUUMsR0FBRyxDQUFDLDZCQUFtQixJQUFJSCxPQUFPSSxXQUFXO1FBRXJELE1BQU0sRUFBRUMsWUFBWSxFQUFFQyxPQUFPLEVBQUUsR0FBRyxNQUFNUixRQUFRUyxJQUFJO1FBRXBETCxRQUFRQyxHQUFHLENBQUMsbUNBQXlCO1lBQ25DSyxtQkFBbUJILGNBQWNUO1lBQ2pDYSxlQUFl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QUFTdkIsTUFBTSxDQUFDLENBQUMsRUFBRXVCLFNBQVNRLFVBQVUsQ0FBQyxDQUFDO2dCQUFFa0IsU0FBU0Q7WUFBYSxHQUN4STtnQkFBRWhELFFBQVE7WUFBSTtRQUVsQjtJQUVGLEVBQUUsT0FBT0osT0FBTztRQUNkLE1BQU1lLGVBQWUzQixLQUFLQyxHQUFHLEtBQUtGO1FBQ2xDRyxRQUFRVSxLQUFLLENBQUMsc0JBQXNCQTtRQUNwQ1YsUUFBUUMsR0FBRyxDQUFDO1FBRVosT0FBT2QscURBQVlBLENBQUNrQixJQUFJLENBQ3RCO1lBQUVLLE9BQU87UUFBd0MsR0FDakQ7WUFBRUksUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbDdsbS8uL3NyYy9hcHAvYXBpL25vdGlmaWNhdGlvbnMvc21zL2J1bGsvcm91dGUudHM/MjI3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuXG4vLyDYqtmG2LPZitmCINix2YLZhSDYp9mE2YfYp9iq2YEg2KfZhNmF2LXYsdmKXG5jb25zdCBmb3JtYXRFZ3lwdGlhblBob25lID0gKHBob25lOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAvLyDYpdiy2KfZhNipINis2YXZiti5INin2YTZhdiz2KfZgdin2Kog2YjYp9mE2LHZhdmI2LJcbiAgbGV0IGNsZWFuZWQgPSBwaG9uZS5yZXBsYWNlKC9cXHMrL2csICcnKS5yZXBsYWNlKC9bXlxcZCtdL2csICcnKTtcbiAgXG4gIC8vINil2LDYpyDZg9in2YYg2KfZhNix2YLZhSDZitio2K/YoyDYqNmAIDAgKNmF2LXYsdmKINmF2K3ZhNmKKVxuICBpZiAoY2xlYW5lZC5zdGFydHNXaXRoKCcwJykpIHtcbiAgICByZXR1cm4gJysyMCcgKyBjbGVhbmVkLnN1YnN0cmluZygxKTtcbiAgfVxuICBcbiAgLy8g2KXYsNinINmD2KfZhiDYp9mE2LHZgtmFINmK2KjYr9ijINio2YAgMjAgKNmF2LXYsdmKINio2K/ZiNmGICspXG4gIGlmIChjbGVhbmVkLnN0YXJ0c1dpdGgoJzIwJykpIHtcbiAgICByZXR1cm4gJysnICsgY2xlYW5lZDtcbiAgfVxuICBcbiAgLy8g2KXYsNinINmD2KfZhiDYp9mE2LHZgtmFINmK2KjYr9ijINio2YAgKzIwICjZhdi12LHZiiDYtdit2YrYrSlcbiAgaWYgKGNsZWFuZWQuc3RhcnRzV2l0aCgnKzIwJykpIHtcbiAgICByZXR1cm4gY2xlYW5lZDtcbiAgfVxuICBcbiAgLy8g2KXYsNinINmD2KfZhiDYp9mE2LHZgtmFIDExINix2YLZhSAo2YXYtdix2Yog2KjYr9mI2YYg2LHZhdiyINin2YTYr9mI2YTYqSlcbiAgaWYgKGNsZWFuZWQubGVuZ3RoID09PSAxMSAmJiBjbGVhbmVkLnN0YXJ0c1dpdGgoJzAxJykpIHtcbiAgICByZXR1cm4gJysyMCcgKyBjbGVhbmVkLnN1YnN0cmluZygxKTtcbiAgfVxuICBcbiAgLy8g2KXYsNinINmD2KfZhiDYp9mE2LHZgtmFIDEwINij2LHZgtin2YUgKNmF2LXYsdmKINio2K/ZiNmGIDApXG4gIGlmIChjbGVhbmVkLmxlbmd0aCA9PT0gMTAgJiYgY2xlYW5lZC5zdGFydHNXaXRoKCcxJykpIHtcbiAgICByZXR1cm4gJysyMCcgKyBjbGVhbmVkO1xuICB9XG4gIFxuICAvLyDYpdiw2Kcg2YTZhSDZitmD2YYg2YXYtdix2YrYjCDZhti52YrYr9mHINmD2YXYpyDZh9mIXG4gIHJldHVybiBjbGVhbmVkO1xufTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgXG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ/Cfk7EgPT09INio2K/YoSDYt9mE2KggU01TIEJ1bGsgPT09Jyk7XG4gICAgY29uc29sZS5sb2coJ/CflZAg2YjZgtiqINin2YTYqNiv2KfZitipOicsIG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSk7XG4gICAgXG4gICAgY29uc3QgeyBwaG9uZU51bWJlcnMsIG1lc3NhZ2UgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuXG4gICAgY29uc29sZS5sb2coJ/Cfk7Eg2KfZhNio2YrYp9mG2KfYqiDYp9mE2YXYs9iq2YTZhdipOicsIHsgXG4gICAgICBwaG9uZU51bWJlcnNDb3VudDogcGhvbmVOdW1iZXJzPy5sZW5ndGgsIFxuICAgICAgbWVzc2FnZUxlbmd0aDogbWVzc2FnZT8ubGVuZ3RoIFxuICAgIH0pO1xuXG4gICAgaWYgKCFwaG9uZU51bWJlcnMgfHwgIUFycmF5LmlzQXJyYXkocGhvbmVOdW1iZXJzKSB8fCBwaG9uZU51bWJlcnMubGVuZ3RoID09PSAwIHx8ICFtZXNzYWdlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwg2KjZitin2YbYp9iqINmF2YHZgtmI2K/YqTonLCB7IFxuICAgICAgICBoYXNQaG9uZU51bWJlcnM6ICEhcGhvbmVOdW1iZXJzLCBcbiAgICAgICAgaXNBcnJheTogQXJyYXkuaXNBcnJheShwaG9uZU51bWJlcnMpLFxuICAgICAgICBwaG9uZUNvdW50OiBwaG9uZU51bWJlcnM/Lmxlbmd0aCxcbiAgICAgICAgaGFzTWVzc2FnZTogISFtZXNzYWdlIFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICfZhdi12YHZiNmB2Kkg2KPYsdmC2KfZhSDYp9mE2YfYp9iq2YEg2YjYp9mE2LHYs9in2YTYqSDZhdi32YTZiNio2KfZhicgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vINiq2YbYs9mK2YIg2KPYsdmC2KfZhSDYp9mE2YfYp9iq2YFcbiAgICBjb25zdCBmb3JtYXR0ZWRQaG9uZU51bWJlcnMgPSBwaG9uZU51bWJlcnMubWFwKGZvcm1hdEVneXB0aWFuUGhvbmUpO1xuICAgIGNvbnNvbGUubG9nKCfwn5OxINiq2YbYs9mK2YIg2KPYsdmC2KfZhSDYp9mE2YfYp9iq2YE6JywgeyBcbiAgICAgIG9yaWdpbmFsOiBwaG9uZU51bWJlcnMsIFxuICAgICAgZm9ybWF0dGVkOiBmb3JtYXR0ZWRQaG9uZU51bWJlcnMgXG4gICAgfSk7XG5cbiAgICAvLyDZgdmKINmI2LbYuSDYp9mE2KrYt9mI2YrYsdiMINmG2LnYsdi2INix2LPYp9mE2Kkg2YXYrdin2YPYp9ipINio2K/ZhNin2Ysg2YXZhiDYp9mE2KXYsdiz2KfZhCDYp9mE2YHYudmE2YpcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgJiYgcHJvY2Vzcy5lbnYuRU5BQkxFX1NNU19TSU1VTEFUSU9OID09PSAndHJ1ZScpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5SnINmI2LbYuSDYp9mE2KrYt9mI2YrYsSAtINmF2K3Yp9mD2KfYqSBTTVMgQnVsaycpO1xuICAgICAgY29uc29sZS5sb2coJ/Cfk7Eg2LPZitiq2YUg2KXYsdiz2KfZhCBTTVMg2KXZhNmJOicsIGZvcm1hdHRlZFBob25lTnVtYmVycyk7XG4gICAgICBjb25zb2xlLmxvZygn8J+TsSDYp9mE2LHYs9in2YTYqTonLCBtZXNzYWdlKTtcbiAgICAgIFxuICAgICAgLy8g2YXYrdin2YPYp9ipINiq2KPYrtmK2LEg2KfZhNi02KjZg9ipXG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCkpO1xuICAgICAgXG4gICAgICBjb25zdCByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lO1xuICAgICAgY29uc29sZS5sb2coJ+KchSDZhdit2KfZg9in2KkgU01TIEJ1bGsg2YbYp9is2K3YqScpO1xuICAgICAgY29uc29sZS5sb2coJ+KPse+4jyDZiNmC2Kog2KfZhNin2LPYqtis2KfYqNipOicsIHJlc3BvbnNlVGltZSArICdtcycpO1xuICAgICAgY29uc29sZS5sb2coJ/Cfk7EgPT09INin2YbYqtmH2KfYoSDYt9mE2KggU01TIEJ1bGsgPT09Jyk7XG4gICAgICBcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6ICfYqtmFINil2LHYs9in2YQg2KfZhNil2LTYudin2LEg2LnYqNixIFNNUyBCdWxrINio2YbYrNin2K0gKNmF2K3Yp9mD2KfYqSknLFxuICAgICAgICBtZXRob2Q6ICdzbXNfYnVsaycsXG4gICAgICAgIHNpbXVsYXRlZDogdHJ1ZSxcbiAgICAgICAgb3JpZ2luYWxQaG9uZXM6IHBob25lTnVtYmVycyxcbiAgICAgICAgZm9ybWF0dGVkUGhvbmVzOiBmb3JtYXR0ZWRQaG9uZU51bWJlcnMsXG4gICAgICAgIHJlc3BvbnNlVGltZVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8g2KfZhNit2LXZiNmEINi52YTZiSBUb2tlbiDZhdmGINmF2KrYutmK2LHYp9iqINin2YTYqNmK2KbYqVxuICAgIGNvbnN0IEJFT05fVE9LRU4gPSBwcm9jZXNzLmVudi5CRU9OX1YzX1RPS0VOIHx8ICdZdDNBM1J3TVFIeDQ5dHJzejFFTWdTS1A4cU9EMENTVkpYZEp4eTZJcU5OdGNZYmxzWVd0ZlZBdGFKcHYnO1xuICAgIGNvbnN0IFNNU19FTkRQT0lOVCA9ICdodHRwczovL3YzLmFwaS5iZW9uLmNoYXQvYXBpL3YzL21lc3NhZ2VzL3Ntcy9idWxrJztcblxuICAgIGNvbnNvbGUubG9nKCfwn5SnINiq2YPZiNmK2YYgU01TIEJ1bGs6Jywge1xuICAgICAgdG9rZW46IEJFT05fVE9LRU4uc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLFxuICAgICAgZW5kcG9pbnQ6IFNNU19FTkRQT0lOVCxcbiAgICAgIHBob25lQ291bnQ6IGZvcm1hdHRlZFBob25lTnVtYmVycy5sZW5ndGhcbiAgICB9KTtcblxuICAgIGNvbnNvbGUubG9nKCfwn5OxINil2LHYs9in2YQgU01TIEJ1bGsg2KXZhNmJOicsIGZvcm1hdHRlZFBob25lTnVtYmVycyk7XG4gICAgY29uc29sZS5sb2coJ/Cfk7Eg2KfZhNix2LPYp9mE2Kk6JywgbWVzc2FnZSk7XG4gICAgXG4gICAgLy8g2KXYsdiz2KfZhCDYudio2LEgU01TIEJ1bGsg2KjYp9iz2KrYrtiv2KfZhSBBUEkg2KfZhNi12K3ZititXG4gICAgY29uc3QgYXBpU3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFNNU19FTkRQT0lOVCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICdiZW9uLXRva2VuJzogQkVPTl9UT0tFTlxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgcGhvbmVOdW1iZXJzOiBmb3JtYXR0ZWRQaG9uZU51bWJlcnMsXG4gICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICAgIH0pXG4gICAgfSk7XG5cbiAgICBjb25zdCBhcGlSZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gYXBpU3RhcnRUaW1lO1xuICAgIGNvbnN0IHRvdGFsUmVzcG9uc2VUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcblxuICAgIGNvbnNvbGUubG9nKCfwn5OxINin2LPYqtis2KfYqNipIEFQSSBTTVMgQnVsazonLCB7XG4gICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQsXG4gICAgICBhcGlSZXNwb25zZVRpbWU6IGFwaVJlc3BvbnNlVGltZSArICdtcycsXG4gICAgICB0b3RhbFJlc3BvbnNlVGltZTogdG90YWxSZXNwb25zZVRpbWUgKyAnbXMnXG4gICAgfSk7XG4gICAgY29uc29sZS5sb2coJ/Cfk7EgSGVhZGVycyDYp9mE2KfYs9iq2KzYp9io2Kk6JywgT2JqZWN0LmZyb21FbnRyaWVzKHJlc3BvbnNlLmhlYWRlcnMuZW50cmllcygpKSk7XG5cbiAgICAvLyDZgtix2KfYodipINis2LPZhSDYp9mE2KfYs9iq2KzYp9io2Kkg2KXZhiDZiNmP2KzYryDZhNmE2KrYrdmC2YIg2YXZhiDYo9iu2LfYp9ihINin2YTZhdiy2YjYr1xuICAgIGxldCByZXNwb25zZUJvZHlUZXh0ID0gJyc7XG4gICAgdHJ5IHtcbiAgICAgIHJlc3BvbnNlQm9keVRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICBpZiAocmVzcG9uc2VCb2R5VGV4dCkge1xuICAgICAgICBjb25zb2xlLmxvZygn8J+ThCBTTVMgQnVsayBQcm92aWRlciBib2R5OicsIHJlc3BvbnNlQm9keVRleHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ/Cfk4QgU01TIEJ1bGsgUHJvdmlkZXIgYm9keTogPGVtcHR5PicpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfimqDvuI8g2KrYudiw2LEg2YLYsdin2KHYqSDYrNiz2YUg2KfZhNin2LPYqtis2KfYqNipINmF2YYg2KfZhNmF2LLZiNivJyk7XG4gICAgfVxuXG4gICAgbGV0IHByb3ZpZGVySnNvbjogYW55ID0gbnVsbDtcbiAgICBpZiAocmVzcG9uc2VCb2R5VGV4dCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcHJvdmlkZXJKc29uID0gSlNPTi5wYXJzZShyZXNwb25zZUJvZHlUZXh0KTtcbiAgICAgIH0gY2F0Y2gge1xuICAgICAgICAvLyDZhNmK2LMgSlNPTiDigJQg2YbYqtit2YLZgiDZhdmGINmI2KzZiNivINix2LPYp9mE2Kkg2K7Yt9ijINmG2LXZitipINmF2LnYsdmI2YHYqVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vINmD2LTZgSDYp9mE2KPYrti32KfYoSDYudmE2Ykg2YXYs9iq2YjZiSDYp9mE2YXYstmI2K8g2K3YqtmJINmE2Ygg2YPYp9mGIEhUVFAgMjAwXG4gICAgY29uc3QgcHJvdmlkZXJFcnJvclRleHQgPSAocmVzcG9uc2VCb2R5VGV4dCB8fCAnJykudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCBwcm92aWRlclN0YXR1cyA9IHByb3ZpZGVySnNvbj8uc3RhdHVzID8/IHByb3ZpZGVySnNvbj8uY29kZTtcbiAgICBjb25zdCBpc1Byb3ZpZGVyRXJyb3IgPSAoXG4gICAgICBwcm92aWRlclN0YXR1cyA9PT0gNDAwIHx8IHByb3ZpZGVyU3RhdHVzID09PSAnNDAwJyB8fFxuICAgICAgcHJvdmlkZXJFcnJvclRleHQuaW5jbHVkZXMoJ3B1YmxpYyBzZW5kZXIgZXJyb3InKSB8fFxuICAgICAgcHJvdmlkZXJFcnJvclRleHQuaW5jbHVkZXMoXCJ5b3UgY2FuJ3QgdXNlIHRoaXMgYXBpIHdoaWxlIHlvdSB1c2UgcHVibGljIHNlbmRlclwiKVxuICAgICk7XG4gICAgXG4gICAgaWYgKHJlc3BvbnNlLm9rICYmICFpc1Byb3ZpZGVyRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfinIUgU01TIEJ1bGsg2KrZhSDYpdix2LPYp9mE2Ycg2KjZhtis2KfYrSDYpdmE2Yk6JywgZm9ybWF0dGVkUGhvbmVOdW1iZXJzKTtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5OxID09PSDYp9mG2KrZh9in2KEg2LfZhNioIFNNUyBCdWxrID09PScpO1xuICAgICAgXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBtZXNzYWdlOiAn2KrZhSDYpdix2LPYp9mEINin2YTYpdi02LnYp9ixINi52KjYsSBTTVMgQnVsayDYqNmG2KzYp9itJyxcbiAgICAgICAgbWV0aG9kOiAnc21zX2J1bGsnLFxuICAgICAgICBvcmlnaW5hbFBob25lczogcGhvbmVOdW1iZXJzLFxuICAgICAgICBmb3JtYXR0ZWRQaG9uZXM6IGZvcm1hdHRlZFBob25lTnVtYmVycyxcbiAgICAgICAgcHJvdmlkZXJTdGF0dXMsXG4gICAgICAgIHByb3ZpZGVyQm9keTogcHJvdmlkZXJKc29uIHx8IHJlc3BvbnNlQm9keVRleHQgfHwgbnVsbCxcbiAgICAgICAgcmVzcG9uc2VUaW1lOiB0b3RhbFJlc3BvbnNlVGltZVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yUGF5bG9hZCA9IHtcbiAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsXG4gICAgICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQsXG4gICAgICAgIHByb3ZpZGVyU3RhdHVzLFxuICAgICAgICBwcm92aWRlckJvZHk6IHByb3ZpZGVySnNvbiB8fCByZXNwb25zZUJvZHlUZXh0IHx8IG51bGwsXG4gICAgICAgIHBob25lTnVtYmVyczogZm9ybWF0dGVkUGhvbmVOdW1iZXJzXG4gICAgICB9O1xuICAgICAgY29uc29sZS5lcnJvcign4p2MINmB2LTZhCDYpdix2LPYp9mEIFNNUyBCdWxrICjZhdiy2YjYryk6JywgZXJyb3JQYXlsb2FkKTtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5OxID09PSDYp9mG2KrZh9in2KEg2LfZhNioIFNNUyBCdWxrID09PScpO1xuICAgICAgXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6IHByb3ZpZGVySnNvbj8ubWVzc2FnZSB8fCBg2YHYtNmEINmB2Yog2KXYsdiz2KfZhCDYp9mE2KXYtNi52KfYsSDYudio2LEgU01TIEJ1bGs6ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCwgZGV0YWlsczogZXJyb3JQYXlsb2FkIH0sXG4gICAgICAgIHsgc3RhdHVzOiA1MDIgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zdCByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lO1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCDYrti32KMg2YHZiiBTTVMgQnVsazonLCBlcnJvcik7XG4gICAgY29uc29sZS5sb2coJ/Cfk7EgPT09INin2YbYqtmH2KfYoSDYt9mE2KggU01TIEJ1bGsgPT09Jyk7XG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ9it2K/YqyDYrti32KMg2YHZiiDYpdix2LPYp9mEINin2YTYpdi02LnYp9ixINi52KjYsSBTTVMgQnVsaycgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJmb3JtYXRFZ3lwdGlhblBob25lIiwicGhvbmUiLCJjbGVhbmVkIiwicmVwbGFjZSIsInN0YXJ0c1dpdGgiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJQT1NUIiwicmVxdWVzdCIsInN0YXJ0VGltZSIsIkRhdGUiLCJub3ciLCJjb25zb2xlIiwibG9nIiwidG9JU09TdHJpbmciLCJwaG9uZU51bWJlcnMiLCJtZXNzYWdlIiwianNvbiIsInBob25lTnVtYmVyc0NvdW50IiwibWVzc2FnZUxlbmd0aCIsIkFycmF5IiwiaXNBcnJheSIsImVycm9yIiwiaGFzUGhvbmVOdW1iZXJzIiwicGhvbmVDb3VudCIsImhhc01lc3NhZ2UiLCJzdGF0dXMiLCJmb3JtYXR0ZWRQaG9uZU51bWJlcnMiLCJtYXAiLCJvcmlnaW5hbCIsImZvcm1hdHRlZCIsInByb2Nlc3MiLCJlbnYiLCJFTkFCTEVfU01TX1NJTVVMQVRJT04iLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJyZXNwb25zZVRpbWUiLCJzdWNjZXNzIiwibWV0aG9kIiwic2ltdWxhdGVkIiwib3JpZ2luYWxQaG9uZXMiLCJmb3JtYXR0ZWRQaG9uZXMiLCJCRU9OX1RPS0VOIiwiQkVPTl9WM19UT0tFTiIsIlNNU19FTkRQT0lOVCIsInRva2VuIiwiZW5kcG9pbnQiLCJhcGlTdGFydFRpbWUiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYXBpUmVzcG9uc2VUaW1lIiwidG90YWxSZXNwb25zZVRpbWUiLCJzdGF0dXNUZXh0IiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJlbnRyaWVzIiwicmVzcG9uc2VCb2R5VGV4dCIsInRleHQiLCJlIiwicHJvdmlkZXJKc29uIiwicGFyc2UiLCJwcm92aWRlckVycm9yVGV4dCIsInRvTG93ZXJDYXNlIiwicHJvdmlkZXJTdGF0dXMiLCJjb2RlIiwiaXNQcm92aWRlckVycm9yIiwiaW5jbHVkZXMiLCJvayIsInByb3ZpZGVyQm9keSIsImVycm9yUGF5bG9hZCIsImRldGFpbHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/notifications/sms/bulk/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute&page=%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Fsms%2Fbulk%2Froute.ts&appDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cel7lm25-main%20(1)%5Cel7lm25-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();